/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gifter, GifterInterface } from "../Gifter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "azero",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPriceBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_azero",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasPriceBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "outboundTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_azero",
        type: "address",
      },
    ],
    name: "setAzero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPriceBid",
        type: "uint256",
      },
    ],
    name: "setGasPriceBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxGas",
        type: "uint256",
      },
    ],
    name: "setMaxGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516113896100fd60003960008181610993015281816109bc0152610b0201526113896000f3fe6080604052600436106101095760003560e01c80638ce44b9911610095578063bb3422c811610064578063bb3422c8146102a3578063c0d78655146102c3578063e30c3978146102e3578063f2fde38b146102f8578063f887ea401461031857600080fd5b80638ce44b99146102055780638da5cb5b1461023d5780638e92807614610252578063ad3cb1cc1461027257600080fd5b806352d1902d116100dc57806352d1902d1461019057806357fb25cc146101a55780635d942ac1146101c5578063715018a6146101db57806379ba5097146101f057600080fd5b80633045bf1f1461010e57806347df2599146101375780634f1ef28614610159578063501d815c1461016c575b600080fd5b61012161011c366004610f76565b610338565b60405161012e9190611007565b60405180910390f35b34801561014357600080fd5b5061015761015236600461101a565b6105ba565b005b6101576101673660046110a6565b6105e4565b34801561017857600080fd5b5061018260025481565b60405190815260200161012e565b34801561019c57600080fd5b50610182610603565b3480156101b157600080fd5b506101576101c0366004611139565b610620565b3480156101d157600080fd5b5061018260035481565b3480156101e757600080fd5b5061015761076e565b3480156101fc57600080fd5b50610157610782565b34801561021157600080fd5b50600054610225906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b34801561024957600080fd5b506102256107cf565b34801561025e57600080fd5b5061015761026d366004611198565b610804565b34801561027e57600080fd5b50610121604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156102af57600080fd5b506101576102be366004611198565b610811565b3480156102cf57600080fd5b506101576102de36600461101a565b61081e565b3480156102ef57600080fd5b50610225610848565b34801561030457600080fd5b5061015761031336600461101a565b610871565b34801561032457600080fd5b50600154610225906001600160a01b031681565b6060836103506001600160a01b0382163330866108f6565b600154604051635ed004ff60e11b81526001600160a01b03878116600483015290911690600090829063bda009fe90602401602060405180830381865afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c391906111b1565b60405163095ea7b360e01b81526001600160a01b038083166004830152602482018890529192509084169063095ea7b3906044016020604051808303816000875af1158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a91906111ce565b506000546003546002546001600160a01b0390921691829163095ea7b3918591610463916111f0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d291906111ce565b5060008060405180602001604052806000815250905060006003546002546104fa91906111f0565b9050600083838360405160200161051393929190611215565b6040516020818303038152906040529050866001600160a01b0316634fb1a07b348e8e8f8f600254600354896040518963ffffffff1660e01b8152600401610561979695949392919061123e565b60006040518083038185885af115801561057f573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526105a89190810190611290565b985050505050505050505b9392505050565b6105c2610956565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6105ec610988565b6105f582610a2d565b6105ff8282610a35565b5050565b600061060d610af7565b5060008051602061133483398151915290565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156106665750825b905060008267ffffffffffffffff1660011480156106835750303b155b905081158015610691575080155b156106af5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106d957845460ff60401b1916600160401b1785555b600080546001600160a01b03808d166001600160a01b03199283161790925560018054928c16929091169190911790556002889055600387905561071c86610b40565b831561076257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b610776610956565b6107806000610b51565b565b338061078c610848565b6001600160a01b0316146107c35760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6107cc81610b51565b50565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b61080c610956565b600255565b610819610956565b600355565b610826610956565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006107f4565b610879610956565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556108bd6107cf565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610950908590610b89565b50505050565b3361095f6107cf565b6001600160a01b0316146107805760405163118cdaa760e01b81523360048201526024016107ba565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a0f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a03600080516020611334833981519152546001600160a01b031690565b6001600160a01b031614155b156107805760405163703e46dd60e11b815260040160405180910390fd5b6107cc610956565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a8f575060408051601f3d908101601f19168201909252610a8c918101906112fe565b60015b610ab757604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107ba565b6000805160206113348339815191528114610ae857604051632a87526960e21b8152600481018290526024016107ba565b610af28383610bec565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107805760405163703e46dd60e11b815260040160405180910390fd5b610b48610c42565b6107cc81610c8b565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556105ff82610cbd565b6000610b9e6001600160a01b03841683610d2e565b90508051600014158015610bc3575080806020019051810190610bc191906111ce565b155b15610af257604051635274afe760e01b81526001600160a01b03841660048201526024016107ba565b610bf582610d45565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610c3a57610af28282610daa565b6105ff610e20565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661078057604051631afcd79f60e31b815260040160405180910390fd5b610c93610c42565b6001600160a01b0381166107c357604051631e4fbdf760e01b8152600060048201526024016107ba565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6060610d3c83836000610e3f565b90505b92915050565b806001600160a01b03163b600003610d7b57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107ba565b60008051602061133483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051610dc79190611317565b600060405180830381855af49150503d8060008114610e02576040519150601f19603f3d011682016040523d82523d6000602084013e610e07565b606091505b5091509150610e17858383610edc565b95945050505050565b34156107805760405163b398979f60e01b815260040160405180910390fd5b606081471015610e645760405163cd78605960e01b81523060048201526024016107ba565b600080856001600160a01b03168486604051610e809190611317565b60006040518083038185875af1925050503d8060008114610ebd576040519150601f19603f3d011682016040523d82523d6000602084013e610ec2565b606091505b5091509150610ed2868383610edc565b9695505050505050565b606082610ef157610eec82610f38565b6105b3565b8151158015610f0857506001600160a01b0384163b155b15610f3157604051639996b31560e01b81526001600160a01b03851660048201526024016107ba565b50806105b3565b805115610f485780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146107cc57600080fd5b600080600060608486031215610f8b57600080fd5b8335610f9681610f61565b92506020840135610fa681610f61565b929592945050506040919091013590565b60005b83811015610fd2578181015183820152602001610fba565b50506000910152565b60008151808452610ff3816020860160208601610fb7565b601f01601f19169290920160200192915050565b602081526000610d3c6020830184610fdb565b60006020828403121561102c57600080fd5b81356105b381610f61565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561107657611076611037565b604052919050565b600067ffffffffffffffff82111561109857611098611037565b50601f01601f191660200190565b600080604083850312156110b957600080fd5b82356110c481610f61565b9150602083013567ffffffffffffffff8111156110e057600080fd5b8301601f810185136110f157600080fd5b80356111046110ff8261107e565b61104d565b81815286602083850101111561111957600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600080600060a0868803121561115157600080fd5b853561115c81610f61565b9450602086013561116c81610f61565b93506040860135925060608601359150608086013561118a81610f61565b809150509295509295909350565b6000602082840312156111aa57600080fd5b5035919050565b6000602082840312156111c357600080fd5b81516105b381610f61565b6000602082840312156111e057600080fd5b815180151581146105b357600080fd5b8082028115828204841417610d3f57634e487b7160e01b600052601160045260246000fd5b83815260606020820152600061122e6060830185610fdb565b9050826040830152949350505050565b600060018060a01b03808a16835280891660208401528088166040840152508560608301528460808301528360a083015260e060c083015261128360e0830184610fdb565b9998505050505050505050565b6000602082840312156112a257600080fd5b815167ffffffffffffffff8111156112b957600080fd5b8201601f810184136112ca57600080fd5b80516112d86110ff8261107e565b8181528560208385010111156112ed57600080fd5b610e17826020830160208601610fb7565b60006020828403121561131057600080fd5b5051919050565b60008251611329818460208701610fb7565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220112681d98dcdec2906a323c29766defbc9e363228b63126f145bbcdac7ac731664736f6c63430008140033";

type GifterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GifterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gifter__factory extends ContractFactory {
  constructor(...args: GifterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Gifter> {
    return super.deploy(overrides || {}) as Promise<Gifter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Gifter {
    return super.attach(address) as Gifter;
  }
  override connect(signer: Signer): Gifter__factory {
    return super.connect(signer) as Gifter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GifterInterface {
    return new utils.Interface(_abi) as GifterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gifter {
    return new Contract(address, _abi, signerOrProvider) as Gifter;
  }
}
